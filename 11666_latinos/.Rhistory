df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
df_sample$sample_name
colnames(df_sample)
library(MicrobeDS)
library(dplyr)
library(ggplot2)
library(phyloseq)
library(RColorBrewer)
library("biomformat")
path_to_data <- "~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/49921_otu_table.biom"
data <- read_biom(path_to_data)
otu <- biom_data(data)
dim(otu) # 5583 rows and 565 samples (rows)
# Since taxa are rows (so observations are columns),
# we sum over the columns to get library sizes.
lib_sizes <- Matrix::colSums(otu)
summary(lib_sizes)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
well_defined <- !grepl('BLANK', df_sample$sample_name)
df_sample <- df_sample %>% filter(well_defined)
sample_df <- data.frame(sample_name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% inner_join(df_sample, by='sample_name')
sample_df %>%
group_by(hispanic_origin) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
# Create a function to produce kruskal-wallis test result and ggplot
show_plot <- function(df, col, log = FALSE) {
krus_pval = kruskal.test(df$lib_sizes ~ df[,col])$p.value
if (log) {
ggplot(df, aes(x=log(lib_sizes), color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("Log library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
} else {
ggplot(df, aes(x=lib_sizes, color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
}
}
sample_df$diabetes_self_v2
sample_df$diabetes_lab_v2
sample_df$diabetes3_v2
sample_df$diabetes_self_v2
show_plot(sample_df[(sample_df$hispanic_origin!="not applicable")&(s)ample_df$hispanic_origin!="not provided"),], "diabetes_self_v2")
show_plot(sample_df[(sample_df$hispanic_origin!="not applicable")&(sample_df$hispanic_origin!="not provided"),], "diabetes_self_v2")
show_plot(sample_df[(sample_df$hispanic_origin!="not applicable")&&(sample_df$hispanic_origin!="not provided"),], "diabetes_self_v2")
show_plot(sample_df[sample_df$diabetes_self_v2!="not provided",], "diabetes_self_v2")
sample_df$education_c3_v2
View(sample_df)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/urbanization/10333_20190808-130957.txt', header=TRUE, sep='\t')
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/urbanization/10333_20190808-130957.txt', header=TRUE, sep='\t')
colnames(df_sample)
df_sample$sample_type
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/urbanization/10333_20190808-130957.txt', header=TRUE, sep='\t')
length(unique(df_sample$sample_name))
library(MicrobeDS)
library(dplyr)
library(ggplot2)
library(phyloseq)
library(RColorBrewer)
library("biomformat")
path_to_data <- "~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/49921_otu_table.biom"
data <- read_biom(path_to_data)
otu <- biom_data(data)
dim(otu) # 5583 rows and 565 samples (rows)
# Since taxa are rows (so observations are columns),
# we sum over the columns to get library sizes.
lib_sizes <- Matrix::colSums(otu)
summary(lib_sizes)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
colnames(df_sample)
show_plot(sample_df[sample_df$hispanic_origin!="",], "hispanic_origin")
df_sample$host_body_habitat
df_sample$host_body_product
df_sample$host_body_site
df_sample$age_units
df_sample$agegroup_c6_nhanes_v2
df_sample$education_c3_v2
show_plot(sample_df[sample_df$education_c3_v2!="not provided",], "education_c3_v2")
show_plot(sample_df, "education_c3_v2")
show_plot(sample_df[sample_df$education_c3_v2!="",], "education_c3_v2")
df_sample$agegroup_c6_v2
df_sample$us_born_v2
show_plot(sample_df, "us_born_v2")
show_plot(sample_df[sample_df!=""], "us_born_v2")
show_plot(sample_df[sample_df$us_born_v2!=""], "us_born_v2")
show_plot(sample_df[sample_df$us_born_v2!="",], "us_born_v2")
