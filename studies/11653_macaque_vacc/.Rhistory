library(MicrobeDS)
library(dplyr)
library(phyloseq)
library(metagenomeSeq)
library("biomformat")
source("~/Documents/UC Berkeley/spring2020/Researches/librarysize/DATA/functions.R")
path_to_data <- "~/Documents/UC Berkeley/spring2020/Researches/librarysize/DATA/11653_macaque_vacc/47024_otu_table.biom"
otu <- otu_table(import_biom(path_to_data))
dim(otu) # 1242 taxa and 27 samples (rows)
taxa_are_rows(otu) # taxa are rows (so observations are columns),
otu = as.data.frame(otu)
otu = otu[, which(lapply(1:ncol(otu), function(i) {length(which(otu[, i]>0))})>1)]
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/DATA/11653_macaque_vacc/11653_20180301-112907.txt', header=TRUE, sep='\t')
head(df_sample)
df_sample$description
df_sample$vacc = sapply(strsplit(as.character(df_sample$description), "."),`[[`, 1)
df_sample$vacc
sapply(strsplit(as.character(df_sample$description), "."),`[[`, 1)
strsplit(as.character(df_sample$description), ".")
strsplit((df_sample$description, ".")
strsplit(df_sample$description, ".")
strsplit(as.character(df_sample$description), ".")
as.character(df_sample$description)
strsplit(as.character(df_sample$description), "\."))
strsplit(as.character(df_sample$description), "//."))
strsplit(as.character(df_sample$description), "\\."))
strsplit(as.character(df_sample$description), "/."))
strsplit(as.character(df_sample$description), "[.]"))
strsplit(as.character(df_sample$description), "[.]")
strsplit(as.character(df_sample$description), ".")
strsplit(as.character(df_sample$description), "[.]")
df_sample$vacc = sapply(strsplit(as.character(df_sample$description), "[.]"),`[[`, 1)
df_sample$vacc
WRITE = TRUE
STUDY_ID = 11653
SUMMARY = "macaque_vacc"
WRITE = TRUE
show_plot(otu, df_sample, "sample_name", "host_life_stage", "TSS", "demographics", TRUE, write = WRITE)
show_plot(otu, df_sample, "sample_name", "host_life_stage", "GMPR", "demographics", TRUE, write = WRITE)
show_plot(otu, df_sample, "sample_name", "host_life_stage", "CSS", "demographics", TRUE, write = WRITE)
s
show_plot(otu, df_sample, "sample_name", "vacc", "TSS", "chemicals", TRUE, write = WRITE)
show_plot(otu, df_sample, "sample_name", "vacc", "GMPR", "chemicals", TRUE, write = WRITE)
show_plot(otu, df_sample, "sample_name", "vacc", "CSS", "chemicals", TRUE, write = WRITE)
rowSums(otu)
sum(rowSums(otu))
sum(rowSums(otu))*0.0.00005/100
sum(rowSums(otu))*0.00005/100
otu[, -1]
sum(rowSums(otu))*0.00005/100
otu[rowSums(otu) >= (sum(rowSums(otu))*0.00005/100), ]
dim(otu[rowSums(otu) >= (sum(rowSums(otu))*0.00005/100), ])
filt_otu = [rowSums(otu) >= (sum(rowSums(otu))*0.00005/100), ]
filt_otu = otu[rowSums(otu) >= (sum(rowSums(otu))*0.00005/100), ]
WRITE = FALSE
show_plot(filt_otu, df_sample, "sample_name", "host_life_stage", "TSS", "demographics", TRUE, write = WRITE)
show_plot(filt_otu, df_sample, "sample_name", "host_life_stage", "GMPR", "demographics", TRUE, write = WRITE)
show_plot(filt_otu, df_sample, "sample_name", "host_life_stage", "CSS", "demographics", TRUE, write = WRITE)
show_plot(filt_otu, df_sample, "sample_name", "vacc", "TSS", "chemicals", TRUE, write = WRITE)
show_plot(filt_otu, df_sample, "sample_name", "vacc", "GMPR", "chemicals", TRUE, write = WRITE)
show_plot(filt_otu, df_sample, "sample_name", "vacc", "CSS", "chemicals", TRUE, write = WRITE)
dim(filt_otu)
library(MicrobeDS)
library(dplyr)
library(phyloseq)
library(metagenomeSeq)
library("biomformat")
source("~/Documents/UC Berkeley/spring2020/Researches/librarysize/DATA/functions.R")
path_to_data <- "~/Documents/UC Berkeley/spring2020/Researches/librarysize/DATA/11815_bat/63793_otu_table.biom"
otu <- otu_table(import_biom(path_to_data))
dim(otu) # 20893 taxa and 1232 samples (rows)
taxa_are_rows(otu) # taxa are rows (so observations are columns),
otu = as.data.frame(otu)
otu = otu[, which(lapply(1:ncol(otu), function(i) {length(which(otu[, i]>0))})>1)]
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/DATA/11815_bat/11815_20181108-170610.txt', header=TRUE, sep='\t')
df_sample$country = sapply(strsplit(as.character(df_sample$geo_loc_name), ":"), `[[`, 1)
############ GLOBAL VARIABLE ##############
STUDY_ID = 11815
SUMMARY = "bat"
WRITE = FALSE
colSums(otu)
colSums(otu)<1000
otu[, colSums(otu)<1000]
dim(otu[, colSums(otu)<1000])
dim(otu[, colSums(otu)>1000])
fil_otu = otu[, colSums(otu)>1000]
fil_otu = otu[, colSums(otu)>1000]
WRITE = FALSE
show_plot(fil_otu, df_sample, "sample_name", "geo_loc_name", "TSS", "geo_loc", TRUE, write = WRITE)
show_plot(fil_otu, df_sample, "sample_name", "country", "TSS", "geo_loc", TRUE, write = WRITE)
show_plot(fil_otu, df_sample, "sample_name", "geo_loc_name", "GMPR", "geo_loc", TRUE, write = WRITE)
show_plot(fil_otu, df_sample, "sample_name", "country", "GMPR", "geo_loc", TRUE, write = WRITE)
show_plot(fil_otu, df_sample, "sample_name", "country", "CSS", "geo_loc", TRUE, write = WRITE)
show_plot(fil_otu, df_sample, "sample_name", "host_sex", "TSS", "demographics", FALSE, write = WRITE)
show_plot(fil_otu, df_sample, "sample_name", "host_sex", "GMPR", "demographics", FALSE, write = WRITE)
show_plot(fil_otu, df_sample, "sample_name", "host_sex", "CSS", "demographics", FALSE, write = WRITE)
show_plot(otu, df_sample, "sample_name", "sample_type", "TSS", "body_site", FALSE, write = WRITE)
show_plot(otu, df_sample, "sample_name", "sample_type", "GMPR", "body_site", FALSE, write = WRITE)
show_plot(otu, df_sample, "sample_name", "sample_type", "CSS", "body_site", FALSE, write = WRITE)
