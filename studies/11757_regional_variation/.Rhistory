geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
}
}
show_plot(sample_df, "districts", TRUE)
show_plot(sample_df, "occupation", TRUE)
sample_df$occupation
sample_df[sample_df$occupation==NA]
sample_df[sample_df$occupation=="NA"]
sample_df[sample_df$occupation=="a"]
sample_df$occupation
sample_df$occupation==a
sample_df$occupation=="a"
sample_df[sample_df$occupation=="a"]
sample_df[,sample_df$occupation=="a"]
sample_df[sample_df$occupation=="a",]
show_plot(sample_df[sample_df$occupation=="NA",], "occupation", TRUE)
sample_df$occupation
show_plot(sample_df[~sample_df$occupation=="NA",], "occupation", TRUE)
show_plot(sample_df[sample_df$occupation!="NA",], "occupation", TRUE)
sample_df$education
show_plot(sample_df, "education", TRUE)
show_plot(sample_df[sample_df$education!="NA",], "education", TRUE)
sample_df$static_time
show_plot(sample_df, "antibiotics", TRUE)
source('~/Documents/UC Berkeley/spring2020/Researches/librarysize/regional_variation/regional_variation.R', echo=TRUE)
show_plot(sample_df[sample_df$antibiotics!="NA",], "antibiotics", TRUE)
show_plot(sample_df[sample_df$antibiotics!="NA",], "antibiotics", TRUE)
show_plot(sample_df[sample_df, "asthma", TRUE)
source('~/Documents/UC Berkeley/spring2020/Researches/librarysize/regional_variation/regional_variation.R', echo=TRUE)
source('~/Documents/UC Berkeley/spring2020/Researches/librarysize/regional_variation/regional_variation.R', echo=TRUE)
library(MicrobeDS)
library(dplyr)
library(ggplot2)
library(phyloseq)
library(RColorBrewer)
library("biomformat")
path_to_data <- "~/Documents/UC Berkeley/spring2020/Researches/librarysize/regional_variation/56281_otu_table.biom"
data <- read_biom(path_to_data)
otu <- biom_data(data)
dim(otu) # 13735 rows and 7009 samples (rows)
# Since taxa are rows (so observations are columns),
# we sum over the columns to get library sizes.
lib_sizes <- Matrix::colSums(otu)
summary(lib_sizes)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/regional_variation/regional_variation.txt', header=TRUE, sep='\t')
df_sample$name <- paste0('11757.', df_sample$host_subject_id)
sample_df <- data.frame(name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% left_join(df_sample, by='name')
sample_df %>%
group_by(districts) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
# Create a function to produce kruskal-wallis test result and ggplot
show_plot <- function(df, col, log = FALSE) {
krus_pval = kruskal.test(df$lib_sizes ~ df[,col])$p.value
if (log) {
ggplot(df, aes(x=log(lib_sizes), color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("Log library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
} else {
ggplot(df, aes(x=lib_sizes, color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
}
}
show_plot(sample_df, "districts", TRUE)
show_plot(sample_df[sample_df$occupation!="NA",], "occupation", TRUE)
show_plot(sample_df[sample_df$education!="NA",], "education", TRUE)
show_plot(sample_df[sample_df$antibiotics!="NA",], "antibiotics", TRUE)
show_plot(sample_df[sample_df, "asthma", TRUE)
show_plot(sample_df[sample_df, "asthma", TRUE)
show_plot(sample_df, "asthma", TRUE)
show_plot(sample_df, "beer", TRUE)
show_plot(sample_df, "constipation", TRUE)
show_plot(sample_df, "diarrhea", TRUE)
show_plot(sample_df[sample_df$diarrhea!="NA"], "diarrhea", TRUE)
show_plot(sample_df[sample_df$diarrhea!="NA",], "diarrhea", TRUE)
show_plot(sample_df[sample_df, "gender", TRUE)
show_plot(sample_df, "gender", TRUE)
show_plot(sample_df, "sex", TRUE)
show_plot(sample_df, "medication", TRUE)
show_plot(sample_df[sample_df$medication!="NA",], "medication", TRUE)
show_plot(sample_df[sample_df, "marital_status", TRUE)
show_plot(sample_df, "marital_status", TRUE)
show_plot(sample_df[sample_df$marital_status!="NA",], "marital_status", TRUE)
show_plot(sample_df[sample_df$occupation!="NA",], "occupation", TRUE)
show_plot(sample_df[sample_df$education!="NA",], "education", TRUE)
show_plot(sample_df, "smoking", TRUE)
show_plot(sample_df[sample_df$smoking!="NA",], "smoking", TRUE)
show_plot(sample_df, "sleep_time", TRUE)
show_plot(sample_df[sample_df$diarrhea!="NA",], "diarrhea", TRUE)
library(MicrobeDS)
library(dplyr)
library(ggplot2)
library(phyloseq)
library(RColorBrewer)
library("biomformat")
path_to_data <- "~/Documents/UC Berkeley/spring2020/Researches/librarysize/41941_gene_microbiome_interaction/41941_otu_table.biom"
data <- read_biom(path_to_data)
otu <- biom_data(data) # 4122 rows and 653 samples (rows)
dim(otu) # 4122 rows and 653 samples (rows)
library(MicrobeDS)
library(dplyr)
library(ggplot2)
library(phyloseq)
library(RColorBrewer)
library("biomformat")
path_to_data <- "~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/49921_otu_table.biomm"
data <- read_biom(path_to_data)
otu <- biom_data(data)
dim(otu) # 13735 rows and 7009 samples (rows)
# Since taxa are rows (so observations are columns),
# we sum over the columns to get library sizes.
lib_sizes <- Matrix::colSums(otu)
summary(lib_sizes)
path_to_data <- "~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/49921_otu_table.biom"
data <- read_biom(path_to_data)
otu <- biom_data(data)
dim(otu) # 13735 rows and 7009 samples (rows)
# Since taxa are rows (so observations are columns),
# we sum over the columns to get library sizes.
lib_sizes <- Matrix::colSums(otu)
summary(lib_sizes)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/latinos_sample_info.txt', header=TRUE, sep='\t')
df_sample$host_subject_id
colnames(otu)
df_sample$name <- paste0('11666.', df_sample$host_subject_id)
length(unique(df_sample$name))
length(df_sample$name)
length(olnames(otu))
length(colnames(otu))
length(unique(colnames(otu)))
sample_df <- data.frame(name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% left_join(df_sample, by='name')
colnames(sample_df)
sample_df
sample_df$education_c2_v1
sample_df[sample_df$education_c2_v1==1,]
sample_df[sample_df$education_c2_v1==1,]$education_c2_v1
sample_df[sample_df$education_c2_v1=="1",]$education_c2_v1
sample_df[sample_df$education_c2_v1=="1",]
sample_df$gender
unique(sample_df$gender)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
df_sample
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
df_sample$sample_name
length(unique(df_sample))
length(unique(df_sample$sample_name))
length(unique(df_sample$host_subject_id))
unique(df_sample$host_subject_id)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
df_sample$name <- paste0('11666.', df_sample$host_subject_id)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
well_defined <- !grepl('BLANK', sample_df$host_subject_id)
df_sample <- df_sample %>% filter(well_defined)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
well_defined <- !grepl('BLANK', df_sample$host_subject_id)
df_sample <- df_sample %>% filter(well_defined)
df_sample$name <- paste0('11666.', df_sample$host_subject_id)
sample_df <- data.frame(name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% left_join(df_sample, by='name')
sample_df <- sample_df %>% inner_join(df_sample, by='name')
sample_df %>%
group_by(gender) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
colnames(sample_df)
sample_df %>%
group_by(gender_v2.y) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
sample_df %>%
group_by("gender_v2.y") %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
sample_df %>%
group_by(gender_v2.y) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
sample_df %>%
group_by(kit_id.y) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
sample_df %>%
group_by(host_body_site.y) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
sample_df$description.x
sample_df$host_common_name.x
sample_df$host_common_name.y
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
df_sample
df_sample$education_c3_v2
df_sample$education_c2_v1
well_defined <- !grepl('BLANK', df_sample$host_subject_id)
df_sample <- df_sample %>% filter(well_defined)
df_sample$name <- paste0('11666.', df_sample$host_subject_id)
sample_df <- data.frame(name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% inner_join(df_sample, by='name')
sample_df$education_c2_v1
sample_df$education_c3_v2
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
well_defined <- !grepl('BLANK', df_sample$host_subject_id)
df_sample <- df_sample %>% filter(well_defined)
df_sample$education_c3_v2
df_sample$name <- paste0('11666.', df_sample$host_subject_id)
sample_df <- data.frame(name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% inner_join(df_sample, by='name')
sample_df
sample_df$name
sample_df <- data.frame(name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df
df_sample$name
df_sample$sample_name
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/latinos/11666_20191210-120214.txt', header=TRUE, sep='\t')
well_defined <- !grepl('BLANK', df_sample$sample_name)
df_sample <- df_sample %>% filter(well_defined)
sample_df <- data.frame(sample_name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% inner_join(df_sample, by='sample_name')
sample_df
colnames(sample_df)
sample_df
sample_df$geo_loc_name
sample_df %>%
group_by(geo_loc_name) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
sample_df %>%
group_by(geo_loc_name) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
unique(sample_df$geo_loc_name)
unique(sample_df$hispanic_origin)
sample_df %>%
group_by(hispanic_origin) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
# Create a function to produce kruskal-wallis test result and ggplot
show_plot <- function(df, col, log = FALSE) {
krus_pval = kruskal.test(df$lib_sizes ~ df[,col])$p.value
if (log) {
ggplot(df, aes(x=log(lib_sizes), color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("Log library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
} else {
ggplot(df, aes(x=lib_sizes, color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
}
}
show_plot(sample_df, "districts", TRUE)
show_plot(sample_df, "hispanic_origin", TRUE)
show_plot(sample_df, "hispanic_origin")
show_plot(sample_df[sample_df!="",], "hispanic_origin")
show_plot(sample_df[sample_df!="",], "hispanic_origin")
unique(sample_df$hispanic_origin)
length(sample_df$hispanic_origin=="")
show_plot(sample_df[sample_df$hispanic_origin!="",], "hispanic_origin")
library(MicrobeDS)
library(dplyr)
library(ggplot2)
library(phyloseq)
library(RColorBrewer)
library("biomformat")
path_to_data <- "~/Documents/UC Berkeley/spring2020/Researches/librarysize/urbanization/44761_otu_table.biom"
data <- read_biom(path_to_data)
otu <- biom_data(data)
dim(otu) # 5583 rows and 565 samples (rows)
# Since taxa are rows (so observations are columns),
# we sum over the columns to get library sizes.
lib_sizes <- Matrix::colSums(otu)
summary(lib_sizes)
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/urbanization/10333_20190808-130957.txt', header=TRUE, sep='\t')
df_sample
df_sample$host_subject_id
df_sample$sample_name
colnames(otu)
df_sample$sample_name
unique(df_sample$sample_name)
length(unique(df_sample$sample_name))
sample_df <- data.frame(sample_name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% inner_join(df_sample, by='sample_name')
sample_df$country
sample_df %>%
group_by(country) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
# Create a function to produce kruskal-wallis test result and ggplot
show_plot <- function(df, col, log = FALSE) {
krus_pval = kruskal.test(df$lib_sizes ~ df[,col])$p.value
if (log) {
ggplot(df, aes(x=log(lib_sizes), color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("Log library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
} else {
ggplot(df, aes(x=lib_sizes, color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
}
}
colnames(sample_df)
show_plot(sample_df, "geo_loc_name")
show_plot(sample_df, "env_material")
sample_df$env_material
sample_df %>%
group_by(env_material) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
argmin(ample_df$lib_sizes)
?argmin
??argmin
ggplot(df, aes(x=lib_sizes, color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
if (log) {
ggplot(df, aes(x=log(lib_sizes), color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("Log library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
} else {
ggplot(df, aes(x=lib_sizes, color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
}
# Create a function to produce kruskal-wallis test result and ggplot
show_plot <- function(df, col, log = FALSE) {
krus_pval = kruskal.test(df$lib_sizes ~ df[,col])$p.value
if (log) {
ggplot(df, aes(x=log(lib_sizes), color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("Log library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
} else {
ggplot(df, aes(x=lib_sizes, color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
}
}
show_plot(sample_df[sample_df$env_material!="sterile water",], "env_material")
dim(otu) # 28423 rows and 754 samples (rows)
colnames(sample_df)
show_plot(sample_df, "env_biome")
show_plot(sample_df, "animals_in_house")
?is.integer()
is.interger(4)
is.integer(1)
show_plot(sample_df[is.integer(sample_df$animals_in_house)], "animals_in_house")
show_plot(sample_df[is.integer(sample_df$animals_in_house),], "animals_in_house")
is.integer(sample_df$animals_in_house)
as.integer(sample_df$animals_in_house)
show_plot(sample_df[sample_df$animals_in_house==as.integer(sample_df$animals_in_house),], "animals_in_house")
sample_df$animals_in_house==as.integer(sample_df$animals_in_house)
show_plot(sample_df[sample_df$animals_in_house==as.integer(sample_df$animals_in_house)], "animals_in_house")
show_plot(sample_df, "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !="not applicable"], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !="not applicable",], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !="not applicable"||"",], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !=("not applicable"||""),], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !=("not applicable"|""),], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !=c("not applicable",""),], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !=any(c("not applicable","")),], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !=("not applicable",""),], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !="not applicable",], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !="not applicable",], "Carbon_dioxide_inside")
show_plot(sample_df[sample_df$animals_in_house !="not applicable",], "carbon_dioxide_inside")
show_plot(sample_df[sample_df$animals_in_house !="not applicable",], "cleaning_frequency")
show_plot(sample_df, "cleaning_frequency")
show_plot(sample_df["not" %in% sample_df$cleaning_frequency,], "cleaning_frequency")
show_plot(sample_df["not" %in% sample_df$cleaning_frequency], "cleaning_frequency")
"not" %in% sample_df$cleaning_frequency
sample_df$sample_name
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/urbanization/10333_20190808-130957.txt', header=TRUE, sep='\t')
well_defined <- !grepl('bank', df_sample$sample_name)
df_sample <- df_sample %>% filter(well_defined)
sample_df <- data.frame(sample_name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% inner_join(df_sample, by='sample_name')
sample_df %>%
group_by(env_material) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
# Create a function to produce kruskal-wallis test result and ggplot
show_plot <- function(df, col, log = FALSE) {
krus_pval = kruskal.test(df$lib_sizes ~ df[,col])$p.value
if (log) {
ggplot(df, aes(x=log(lib_sizes), color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("Log library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
} else {
ggplot(df, aes(x=lib_sizes, color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
}
}
show_plot(sample_df, "env_biome")
show_plot(sample_df, "env_material")
show_plot(sample_df, "animals_in_house")
sample_df$sample_name
df_sample <- read.table('~/Documents/UC Berkeley/spring2020/Researches/librarysize/urbanization/10333_20190808-130957.txt', header=TRUE, sep='\t')
well_defined <- !grepl('blank', df_sample$sample_name)
df_sample <- df_sample %>% filter(well_defined)
sample_df <- data.frame(sample_name=colnames(otu), lib_sizes=lib_sizes,
stringsAsFactors=F)
sample_df <- sample_df %>% inner_join(df_sample, by='sample_name')
sample_df %>%
group_by(env_material) %>%
summarize(count=n(), mean=mean(lib_sizes), sd=sd(lib_sizes))
# Create a function to produce kruskal-wallis test result and ggplot
show_plot <- function(df, col, log = FALSE) {
krus_pval = kruskal.test(df$lib_sizes ~ df[,col])$p.value
if (log) {
ggplot(df, aes(x=log(lib_sizes), color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("Log library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
} else {
ggplot(df, aes(x=lib_sizes, color=factor(df[,col]))) +
geom_density() +
labs(title = sprintf("library size distribution by %s", col),
caption = sprintf("p value is: %E", krus_pval),
color = col)
}
}
show_plot(sample_df, "env_biome")
show_plot(sample_df, "env_material")
sample_df$sample_name
show_plot(sample_df, "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !="",], "animals_in_house")
show_plot(sample_df, "cleaning_frequency")
show_plot(sample_df[sample_df$cleaning_frequency!="not provided",], "cleaning_frequency")
show_plot(sample_df, "country")
show_plot(sample_df, "cats")
show_plot(sample_df[sample_df$catsy!="not provided",], "cats")
show_plot(sample_df[sample_df$cats!="not provided",], "cats")
show_plot(sample_df[sample_df$dogs!="not provided",], "dogs")
show_plot(sample_df, "dogs")
show_plot(sample_df[sample_df$dogs!="",], "dogs")
show_plot(sample_df, "env_biome")
show_plot(sample_df, "env_package")
show_plot(sample_df, "ethnicity")
show_plot(sample_df[sample_df$ethnicity!="not applicable",], "ethnicity")
show_plot(sample_df[sample_df$cats!="not provided",], "fans")
show_plot(sample_df[sample_df$lfans!="",], "fans")
show_plot(sample_df[sample_df$fans!="",], "fans")
show_plot(sample_df, "country")
show_plot(sample_df, "geo_loc_name")
show_plot(sample_df, "host_body_habitat")
show_plot(sample_df, "host_body_product")
show_plot(sample_df, "host_body_habitat")
show_plot(sample_df, "host_body_product")
show_plot(sample_df, "host_body_site")
show_plot(sample_df, "sample_type")
show_plot(sample_df, "host_body_habitat")
show_plot(sample_df, "sample_type")
show_plot(sample_df, "sex")
show_plot(sample_df[sample_df$sex!="sex"], "sex")
show_plot(sample_df[sample_df$sex!="",], "sex")
show_plot(sample_df, "sample_type")
show_plot(sample_df, "wireless")
show_plot(sample_df[sample_df$wireless!="",], "wireless")
show_plot(sample_df[sample_df$fans!="",], "washers")
show_plot(sample_df[sample_df$fans!="",], "washers")
show_plot(sample_df[sample_df$fans!="",], "washer")
show_plot(sample_df, "washer")
show_plot(sample_df[sample_df$washers!="",], "washer")
show_plot(sample_df[sample_df$washer!="",], "washer")
show_plot(sample_df, "env_biome")
show_plot(sample_df, "env_material")
show_plot(sample_df, "env_package")
show_plot(sample_df, "env_biome")
show_plot(sample_df, "env_material")
show_plot(sample_df, "env_package")
show_plot(sample_df[sample_df$animals_in_house !="",], "animals_in_house")
show_plot(sample_df[sample_df$animals_in_house !="",], "animals_in_house")
show_plot(sample_df[sample_df$cleaning_frequency!="not provided",], "cleaning_frequency")
show_plot(sample_df, "country")
show_plot(sample_df[sample_df$fans!="",], "fans")
show_plot(sample_df[sample_df$washer!="",], "washer")
show_plot(sample_df[sample_df$cats!="not provided",], "cats")
show_plot(sample_df[sample_df$dogs!="",], "dogs")
show_plot(sample_df[sample_df$ethnicity!="not applicable",], "ethnicity")
show_plot(sample_df, "geo_loc_name")
show_plot(sample_df, "host_body_habitat")
show_plot(sample_df, "host_body_site")
show_plot(sample_df, "sample_type")
show_plot(sample_df[sample_df$sex!="",], "sex")
show_plot(sample_df[sample_df$wireless!="",], "wireless")
